//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

public class Spring : MonoBehaviour
{
	public float distance = 1;
	public float k = 10f; //Жесткость
	
	private Rigidbody2D other;
	public Rigidbody2D connectedBody {
		get{return other;}
		set{
			other = value; 
			distance = (this.transform.position - other.transform.position).magnitude;
		}
	}

	public void FixedUpdate() {
		float delta = Time.smoothDeltaTime;

		if (other != null) {		
			float l = (this.transform.position - other.transform.position).magnitude;

			Vector2 force = this.transform.position - other.transform.position;
			force.Normalize ();
			float forceModule = -k * (l - distance); 

			float Fthis = Mathf.Abs(l - distance) * this.rigidbody2D.mass / delta / delta;
			float Fother = Mathf.Abs(l - distance) * other.mass / delta / delta;

			if(Math.Abs(forceModule) > Fthis) Fthis *= Math.Sign(forceModule);
			else Fthis = forceModule;
			if(Math.Abs(forceModule) > Fother) Fother *= Math.Sign(forceModule);
			else Fother = forceModule;
			//Убираем раскачивания из-за дискретного шага: 

			this.rigidbody2D.AddForce (force * Fthis);
			other.AddForce (-force * Fother);
		}
	}
}

